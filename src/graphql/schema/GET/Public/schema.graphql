scalar Date

enum Sexo {
  M
  F
}

enum Role {
  Fazendeiro
  Consumidor
  Employee
}

type ConsumidorSchema {
  id_consumidor: ID
  nome_consumidor: String
  email: String
  numero_telefone: String
  senha: String
  sexo: Sexo
  data_nascimento: Date
  caminho_foto_consumidor: String
  numero_compras: Int
  role: Role
  createAt: Date
  updatedAt: Date
  localizacao_id_localizacao: ID
}

type FazendeiroSchema {
  id_fazendeiro: ID
  nome_fazendeiro: String
  email: String
  quantidade_fazendas: Int
  sexo: Sexo
  data_nascimento: Date
  role: Role
  createAt: Date
  updatedAt: Date
  localizacao_id_localizacao: ID
}

type LocalizacaoSchema {
  id_localizacao: ID
  provincia: String
  cidade: String
  createdAt: Date
}

type ProductSchema {
  id_produto: ID
  nome_produto: String
  preco_produto: Float
  categoria_id_categoria: ID
  caminho_foto_produto: String
  descricao: String
  servico_entrega_disponivel: Boolean
  disponivel: Boolean
  fazenda_id_fazenda: ID
  createAt: Date
  updatedAt: Date
}

type Query {
    costumers: [ConsumidorSchema]
    farmers: [FazendeiroSchema]
    products: [ProductSchema]
}