extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key"])

scalar Date

enum Sexo {
  M
  F
}

enum Role {
  Fazendeiro
  Consumidor
  Employee
}

type LocalizacaoSchema @key(fields: "id_localizacao") {
  id_localizacao: ID
  provincia: String
  cidade: String
  createdAt: Date
}

type FarmSchema @key(fields: "id_fazenda") {
  id_fazenda: ID!
  nome_fazenda: String!
  createAt: Date
  updatedAt: Date
  fazendeiro_id_fazendeiro: String
}

type CostumerSchema @key(fields: "id_consumidor") {
  id_consumidor: ID
  nome_consumidor: String
  email: String
  numero_telefone: String
  senha: String
  sexo: Sexo
  data_nascimento: Date
  caminho_foto_consumidor: String
  numero_compras: Int
  role: Role
  createAt: Date
  updatedAt: Date
  localizacao_id_localizacao: String
}

type CategoriaSchema @key(fields: "id_categoria") {
  id_categoria: Int
  nome_categoria: String
  createdAt: Date
}

type ProductSchema @key(fields: "id_produto") {
  id_produto: ID!
  nome_produto: String
  preco_produto: Float
  categoria_id_categoria: Int
  caminho_foto_produto: String
  descricao: String
  servico_entrega_disponivel: Boolean
  disponivel: Boolean
  fazenda_id_fazenda: String
  createAt: Date
  updatedAt: Date
}

type EmployeeSchema @key(fields: "id_colaborador") {
  id_colaborador: String
  entidade_id_fazenda: String
  empregado_id_consumidor: String
}

type CreateEmployeeSchema {
  entidade: FarmSchema
  empregado: CostumerSchema
  employee: EmployeeSchema
}

input FazendeiroInput {
  nome_fazendeiro: String
  email: String
  senha: String
  caminho_foto_fazendeiro: String
  sexo: Sexo
  data_nascimento: Date
}

type FazendeiroSchema @key(fields: "id_fazendeiro") {
  id_fazendeiro: ID
  nome_fazendeiro: String
  email: String
  quantidade_fazendas: Int
  sexo: Sexo
  data_nascimento: Date
  caminho_foto_fazendeiro: String
  role: Role
  createAt: Date
  updatedAt: Date
  localizacao_id_localizacao: String
}

input LocalizacaoInput {
  provincia: String
  cidade: String
}

input FazendaInput {
  nome_fazenda: String!
}

input ProductInput {
  nome_produto: String
  preco_produto: Float
  caminho_foto_produto: String
  descricao: String
  servico_entrega_disponivel: Boolean
}

type TokenSchema {
  token: ID!
}

type Query {
  health: String!
}

type Mutation {
  createFarmer(
    fazendeiro: FazendeiroInput
    localizacao: LocalizacaoInput
  ): TokenSchema
  createFarm(id_fazendeiro: String!, farm: FazendaInput): FarmSchema
  createProduct(id_fazenda: String!, nome_categoria: String!, produto: ProductInput): ProductSchema
  sellProduct(id_consumidor: ID!, id_produto: ID!): ProductSchema
  createEmployee(id_fazenda: ID!, id_consumidor: ID!): CreateEmployeeSchema
}
