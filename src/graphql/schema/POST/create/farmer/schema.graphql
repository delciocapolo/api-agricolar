scalar Date

enum Sexo {
  M
  F
}

enum Role {
  Farmer
  Costumer
  Employee
}

type FazendeiroSchema {
  id_fazendeiro: String
  nome_fazendeiro: String
  email: String
  quantidade_fazendas: Int
  sexo: Sexo
  data_nascimento: Date
  role: Role
  createAt: Date
  updatedAt: Date
  localizacao_id_localizacao: String
}

type LocalizacaoSchema {
  id_localizacao: String
  provincia: String
  cidade: String
  createdAt: Date
}

type FarmSchema {
  id_fazenda: String
  nome_fazenda: String
  createAt: Date
  updatedAt: Date
  fazendeiro_id_fazendeiro: String
}

type CostumerSchema {
  id_consumidor: String
  nome_consumidor: String
  email: String
  numero_telefone: String
  senha: String
  sexo: Sexo
  data_nascimento: Date
  caminho_foto_consumidor: String
  numero_compras: Int
  role: Role
  createAt: Date
  updatedAt: Date
  localizacao_id_localizacao: String
}

type CategoriaSchema {
  id_categoria: Int
  nome_categoria: String
  createdAt: Date
}

type CreateProductTypeSchema {
  id_fazenda: String
  categoria: CategoriaSchema
}

type ProductSchema {
  id_produto: String
  nome_produto: String
  preco_produto: Float
  categoria_id_categoria: Int
  caminho_foto_produto: String
  descricao: String
  servico_entrega_disponivel: Boolean
  disponivel: Boolean
  fazenda_id_fazenda: String
  createAt: Date
  updatedAt: Date
}

type EmployeeSchema {
  id_colaborador: String
  entidade_id_fazenda: String
  empregado_id_consumidor: String
}

type CreateEmployeeSchema {
  entidade: FarmSchema
  empregado: Costumer
  employee: EmployeeSchema
}

input CreateFarmer {
  fazendeiro: Fazendeiro
  localizacao: Localizacao
}

input CreateFarm {
  id_fazendeiro: String!
  fazenda: FarmSchema
}

input CreateProduct {
  credentials: CreateProductTypeSchema
  produto: ProductSchema
}

input SellProduct {
  id_fazenda: String!
  id_produto: String!
}

input CreateEmployee {
  id_fazenda: String!
  id_consumidor: String!
}

type Query {
  done: String!
}

type Mutation {
  createFarmer(farmer: CreateFarmer): FazendeiroSchema
  createFarm(farm: CreateFarm): FarmSchema
  createProduct(product: CreateProduct): ProductSchema
  sellProduct(sellProduct: SellProduct): ProductSchema
  createEmployee(createEmployee: CreateEmployee): CreateEmployeeSchema
}
